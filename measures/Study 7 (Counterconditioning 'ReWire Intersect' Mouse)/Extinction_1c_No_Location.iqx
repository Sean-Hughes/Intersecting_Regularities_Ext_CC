***************************************************************************************
***************************************************************************************
											SCRIPT OVERVIEW (Intersecting Operant Regularities; Valence Study 1) Replication of Hughes et al. 2016 (JEP:G)
***************************************************************************************
***************************************************************************************
Script Info

Author: Sean Hughes (sean.hughes@ugent.be)
last updated: 20-10-2016
***************************************************************************************
***************************************************************************************

*************************General Variables****************************
**********************************************************************

<defaults>
/ canvassize = (1024px, 768px)
/ screencolor = white
/ txcolor = black
/ fontstyle = ("Arial", 3%)
</defaults>

<expt >
/ blocks = [1 = Manipulation_Check_Instructions_1; 2 = Intersecting_Regularities_Training_block1; 3 = Intersecting_Regularities_Training_block2; 4 = Intersecting_Regularities_Training_block3; 5 = Intersecting_Regularities_Training_block4; 6 = Intersecting_Regularities_Training_block5]
</expt>


**************  Conditioned Stimuli ***************

<picture frame>
/ numitems = 1
/ items = ("frame.jpg")
/ position = (50%, 80%)
</picture>

<picture Response_1_a>
/ numitems = 1
/ items = ("Response_1.jpg")
/ position = (20%, 80%)
</picture>

<picture Response_2_a>
/ numitems = 1
/ items = ("Response_2.jpg")
/ position = (40%, 80%)
</picture>

<picture Response_3_a>
/ numitems = 1
/ items = ("Response_3.jpg")
/ position = (60%, 80%)
</picture>

<picture Response_4_a>
/ numitems = 1
/ items = ("Response_4.jpg")
/ position = (80%, 80%)
</picture>



<picture Response_1_b>
/ numitems = 1
/ items = ("Response_1.jpg")
/ position = (40%, 80%)
</picture>

<picture Response_2_b>
/ numitems = 1
/ items = ("Response_2.jpg")
/ position = (60%, 80%)
</picture>

<picture Response_3_b>
/ numitems = 1
/ items = ("Response_3.jpg")
/ position = (80%, 80%)
</picture>

<picture Response_4_b>
/ numitems = 1
/ items = ("Response_4.jpg")
/ position = (20%, 80%)
</picture>


<picture Response_1_c>
/ numitems = 1
/ items = ("Response_1.jpg")
/ position = (60%, 80%)
</picture>

<picture Response_2_c>
/ numitems = 1
/ items = ("Response_2.jpg")
/ position = (80%, 80%)
</picture>

<picture Response_3_c>
/ numitems = 1
/ items = ("Response_3.jpg")
/ position = (20%, 80%)
</picture>

<picture Response_4_c>
/ numitems = 1
/ items = ("Response_4.jpg")
/ position = (40%, 80%)
</picture>


<picture Response_1_d>
/ numitems = 1
/ items = ("Response_1.jpg")
/ position = (80%, 80%)
</picture>

<picture Response_2_d>
/ numitems = 1
/ items = ("Response_2.jpg")
/ position = (20%, 80%)
</picture>

<picture Response_3_d>
/ numitems = 1
/ items = ("Response_3.jpg")
/ position = (40%, 80%)
</picture>

<picture Response_4_d>
/ numitems = 1
/ items = ("Response_4.jpg")
/ position = (60%, 80%)
</picture>


<picture Stimulus_1>
/ numitems = 1
/ items = ("Stimulus_1.jpg")
/ position = (50%, 30%)
</picture>

<picture Stimulus_2>
/ numitems = 1
/ items = ("Stimulus_2.jpg")
/ position = (50%, 30%)
</picture>

<picture Stimulus_3>
/ numitems = 1
/ items = ("Stimulus_3.jpg")
/ position = (50%, 30%)
</picture>

<picture Stimulus_4>
/ numitems = 1
/ items = ("Stimulus_4.jpg")
/ position = (50%, 30%)
</picture>

<picture Positive_Image>
/ numitems = 10
/ items = ("Good_1.jpg", "Good_2.jpg", "Good_3.jpg", "Good_4.jpg", "Good_5.jpg", "Good_6.jpg", "Good_7.jpg", "Good_8.jpg", "Good_9.jpg", "Good_10.jpg")
/ select = replacenorepeat
/ position = (50%, 30%)
</picture>

<picture Negative_Image>
/ numitems = 10
/ items = ("Bad_1.jpg", "Bad_2.jpg", "Bad_3.jpg", "Bad_4.jpg", "Bad_5.jpg", "Bad_6.jpg", "Bad_7.jpg", "Bad_8.jpg", "Bad_9.jpg", "Bad_10.jpg")
/ position = (50%, 30%)
</picture>

<picture Stimulus_1_target>
/ numitems = 1
/ items = ("Stimulus_1.jpg")
/ position = (50%, 30%)
</picture>

<picture Stimulus_2_target>
/ numitems = 1
/ items = ("Stimulus_2.jpg")
/ position = (50%, 30%)
</picture>

<picture Stimulus_3_target>
/ numitems = 1
/ items = ("Stimulus_3.jpg")
/ position = (50%, 30%)
</picture>

<picture Stimulus_4_target>
/ numitems = 1
/ items = ("Stimulus_4.jpg")
/ position = (50%, 30%)
</picture>

<picture Stimulus_1_sample1>
/ numitems = 1
/ items = ("Stimulus_1.jpg")
/ position = (10%, 70%)
</picture>

<picture Stimulus_2_sample1>
/ numitems = 1
/ items = ("Stimulus_2.jpg")
/ position = (10%, 70%)
</picture>

<picture Stimulus_3_sample1>
/ numitems = 1
/ items = ("Stimulus_3.jpg")
/ position = (10%, 70%)
</picture>

<picture Stimulus_4_sample1>
/ numitems = 1
/ items = ("Stimulus_4.jpg")
/ position = (10%, 70%)
</picture>


<picture Stimulus_1_sample2>
/ numitems = 1
/ items = ("Stimulus_1.jpg")
/ position = (90%, 70%)
</picture>

<picture Stimulus_2_sample2>
/ numitems = 1
/ items = ("Stimulus_2.jpg")
/ position = (90%, 70%)
</picture>

<picture Stimulus_3_sample2>
/ numitems = 1
/ items = ("Stimulus_3.jpg")
/ position = (90%, 70%)
</picture>

<picture Stimulus_4_sample2>
/ numitems = 1
/ items = ("Stimulus_4.jpg")
/ position = (90%, 70%)
</picture>

*************** Unconditioned Stimuli ******************

<picture Positive_Image_target>
/ numitems = 10
/ items = ("Good_1.jpg", "Good_2.jpg", "Good_3.jpg", "Good_4.jpg", "Good_5.jpg", "Good_6.jpg", "Good_7.jpg", "Good_8.jpg", "Good_9.jpg", "Good_10.jpg")
/ select = replacenorepeat
/ position = (50%, 30%)
</picture>

<picture Positive_Image_sample1>
/ numitems = 10
/ items = ("Good_1.jpg", "Good_2.jpg", "Good_3.jpg", "Good_4.jpg", "Good_5.jpg", "Good_6.jpg", "Good_7.jpg", "Good_8.jpg", "Good_9.jpg", "Good_10.jpg")
/ select = replacenorepeat
/ position = (10%, 70%)
</picture>

<picture Positive_Image_sample2>
/ numitems = 10
/ items = ("Good_1.jpg", "Good_2.jpg", "Good_3.jpg", "Good_4.jpg", "Good_5.jpg", "Good_6.jpg", "Good_7.jpg", "Good_8.jpg", "Good_9.jpg", "Good_10.jpg")
/ select = replacenorepeat
/ position = (90%, 70%)
</picture>


<picture Negative_Image_target>
/ numitems = 10
/ items = ("Bad_1.jpg", "Bad_2.jpg", "Bad_3.jpg", "Bad_4.jpg", "Bad_5.jpg", "Bad_6.jpg", "Bad_7.jpg", "Bad_8.jpg", "Bad_9.jpg", "Bad_10.jpg")
/ position = (50%, 30%)
</picture>

<picture Negative_Image_sample1>
/ numitems = 10
/ items = ("Bad_1.jpg", "Bad_2.jpg", "Bad_3.jpg", "Bad_4.jpg", "Bad_5.jpg", "Bad_6.jpg", "Bad_7.jpg", "Bad_8.jpg", "Bad_9.jpg", "Bad_10.jpg")
/ position = (10%, 70%)
</picture>

<picture Negative_Image_sample2>
/ numitems = 10
/ items = ("Bad_1.jpg", "Bad_2.jpg", "Bad_3.jpg", "Bad_4.jpg", "Bad_5.jpg", "Bad_6.jpg", "Bad_7.jpg", "Bad_8.jpg", "Bad_9.jpg", "Bad_10.jpg")
/ position = (90%, 70%)
</picture>

<picture erasebig>
/ erase = false 
/ numitems = 1
/ items = ("erasebig.jpg")
</picture>

**************** text ************************
<text Key_instruction>
/numitems =1
/items= ("The four response options are: D, C, J, or N")
/ txcolor = darkgrey
/ txbgcolor = white
/ position = (50%, 80%)
/ fontstyle = ("Arial", 3%)
</text>

<text RedX>
/ numitems = 1
/ items = ("Incorrect")
/ txcolor = (255, 0, 0)
/ txbgcolor = (255, 255, 255)
/ position = (50%, 50%)
/ fontstyle = ("Arial", 15%)
</text>

<text verder>
/numitems =1
/items= ("Press the spacebar to continue.")
/ txcolor = (255, 255, 255)
/ txbgcolor = (0, 0, 0)
/ position = (50%, 95%)
/ font = ("Times New Roman", -18, 700, 0, 49)
</text>

<text liking>
/numitems =1
/items= ("Please indicate how much you like or dislike the image below")
/ txcolor = (255, 255, 255)
/ txbgcolor = (0, 0, 0)
/ position = (50%, 78%)
/ font = ("Times New Roman", -20, 700, 0, 49)
</text>

<text demand>
/numitems =1
/items= ("Demand Question")
/ txcolor = (255, 255, 255)
/ txbgcolor = (0, 0, 0)
/ position = (50%, 78%)
/ font = ("Times New Roman", -20, 700, 0, 49)
</text>


********** Intersecting Regularities Training ***********

< trial pause>
/trialcode = "pause"
/stimulustimes = [ 1 = erasebig]
/trialduration = 1000
</trial>

<trial Intersecting_Regularities_Training_Trial_1> 
/ inputdevice = mouse
/ responsemessage = (Response_1_a, erasebig, 1500)
/ correctresponse = (Response_1_a)
/ errormessage = (RedX, 1500)
/ response = free
/ validresponse = (Response_1_a, Response_2_a, Response_3_a, Response_4_a)
/ stimulustimes = [400 = frame; 500 = Response_1_a, Response_2_a, Response_3_a, Response_4_a; 0 = Positive_Image]
/ pretrialpause = 1500
/ responseinterrupt = trial
</trial>

<trial Intersecting_Regularities_Training_Trial_2> 
/ inputdevice = mouse
/ responsemessage = (Response_2_a, erasebig, 1500)
/ correctresponse = (Response_2_a)
/ errormessage = (RedX, 1500)
/ response = free
/ validresponse = (Response_1_a, Response_2_a, Response_3_a, Response_4_a)
/ stimulustimes = [400 = frame; 500 = Response_1_a, Response_2_a, Response_3_a, Response_4_a; 0 = Stimulus_2]
/ pretrialpause = 1500
/ responseinterrupt = trial
</trial>

<trial Intersecting_Regularities_Training_Trial_3> 
/ inputdevice = mouse
/ responsemessage = (Response_3_a, erasebig, 1500)
/ correctresponse = (Response_3_a)
/ errormessage = (RedX, 1500)
/ response = free
/ validresponse = (Response_1_a, Response_2_a, Response_3_a, Response_4_a)
/ stimulustimes = [400 = frame; 500 = Response_1_a, Response_2_a, Response_3_a, Response_4_a; 0 = Negative_Image]
/ pretrialpause = 1500
/ responseinterrupt = trial
</trial>

<trial Intersecting_Regularities_Training_Trial_4> 
/ inputdevice = mouse
/ responsemessage = (Response_4_a, erasebig, 1500)
/ correctresponse = (Response_4_a)
/ errormessage = (RedX, 1500)
/ response = free
/ validresponse = (Response_1_a, Response_2_a, Response_3_a, Response_4_a)
/ stimulustimes = [400 = frame; 500 = Response_1_a, Response_2_a, Response_3_a, Response_4_a; 0 = Stimulus_4]
/ pretrialpause = 1500
/ responseinterrupt = trial
</trial>


<trial Intersecting_Regularities_Training_Trial_5> 
/ inputdevice = mouse
/ responsemessage = (Response_1_b, erasebig, 1500)
/ correctresponse = (Response_1_b)
/ errormessage = (RedX, 1500)
/ response = free
/ validresponse = (Response_1_b, Response_2_b, Response_3_b, Response_4_b)
/ stimulustimes = [400 = frame; 500 = Response_1_b, Response_2_b, Response_3_b, Response_4_b; 0 = Positive_Image]
/ pretrialpause = 1500
/ responseinterrupt = trial
</trial>

<trial Intersecting_Regularities_Training_Trial_6> 
/ inputdevice = mouse
/ responsemessage = (Response_2_b, erasebig, 1500)
/ correctresponse = (Response_2_b)
/ errormessage = (RedX, 1500)
/ response = free
/ validresponse = (Response_1_b, Response_2_b, Response_3_b, Response_4_b)
/ stimulustimes = [400 = frame; 500 = Response_1_b, Response_2_b, Response_3_b, Response_4_b; 0 = Stimulus_2]
/ pretrialpause = 1500
/ responseinterrupt = trial
</trial>

<trial Intersecting_Regularities_Training_Trial_7> 
/ inputdevice = mouse
/ responsemessage = (Response_3_b, erasebig, 1500)
/ correctresponse = (Response_3_b)
/ errormessage = (RedX, 1500)
/ response = free
/ validresponse = (Response_1_b, Response_2_b, Response_3_b, Response_4_b)
/ stimulustimes = [400 = frame; 500 = Response_1_b, Response_2_b, Response_3_b, Response_4_b; 0 = Negative_Image]
/ pretrialpause = 1500
/ responseinterrupt = trial
</trial>

<trial Intersecting_Regularities_Training_Trial_8> 
/ inputdevice = mouse
/ responsemessage = (Response_4_b, erasebig, 1500)
/ correctresponse = (Response_4_b)
/ errormessage = (RedX, 1500)
/ response = free
/ validresponse = (Response_1_b, Response_2_b, Response_3_b, Response_4_b)
/ stimulustimes = [400 = frame; 500 = Response_1_b, Response_2_b, Response_3_b, Response_4_b; 0 = Stimulus_4]
/ pretrialpause = 1500
/ responseinterrupt = trial
</trial>


<trial Intersecting_Regularities_Training_Trial_9> 
/ inputdevice = mouse
/ responsemessage = (Response_1_c, erasebig, 1500)
/ correctresponse = (Response_1_c)
/ errormessage = (RedX, 1500)
/ response = free
/ validresponse = (Response_1_c, Response_2_c, Response_3_c, Response_4_c)
/ stimulustimes = [400 = frame; 500 = Response_1_c, Response_2_c, Response_3_c, Response_4_c; 0 = Positive_Image]
/ pretrialpause = 1500
/ responseinterrupt = trial
</trial>

<trial Intersecting_Regularities_Training_Trial_10> 
/ inputdevice = mouse
/ responsemessage = (Response_2_c, erasebig, 1500)
/ correctresponse = (Response_2_c)
/ errormessage = (RedX, 1500)
/ response = free
/ validresponse = (Response_1_c, Response_2_c, Response_3_c, Response_4_c)
/ stimulustimes = [400 = frame; 500 = Response_1_c, Response_2_c, Response_3_c, Response_4_c; 0 = Stimulus_2]
/ pretrialpause = 1500
/ responseinterrupt = trial
</trial>

<trial Intersecting_Regularities_Training_Trial_11> 
/ inputdevice = mouse
/ responsemessage = (Response_3_c, erasebig, 1500)
/ correctresponse = (Response_3_c)
/ errormessage = (RedX, 1500)
/ response = free
/ validresponse = (Response_1_c, Response_2_c, Response_3_c, Response_4_c)
/ stimulustimes = [400 = frame; 500 = Response_1_c, Response_2_c, Response_3_c, Response_4_c; 0 = Negative_Image]
/ pretrialpause = 1500
/ responseinterrupt = trial
</trial>

<trial Intersecting_Regularities_Training_Trial_12> 
/ inputdevice = mouse
/ responsemessage = (Response_4_c, erasebig, 1500)
/ correctresponse = (Response_4_c)
/ errormessage = (RedX, 1500)
/ response = free
/ validresponse = (Response_1_c, Response_2_c, Response_3_c, Response_4_c)
/ stimulustimes = [400 = frame; 500 = Response_1_c, Response_2_c, Response_3_c, Response_4_c; 0 = Stimulus_4]
/ pretrialpause = 1500
/ responseinterrupt = trial
</trial>


<trial Intersecting_Regularities_Training_Trial_13> 
/ inputdevice = mouse
/ responsemessage = (Response_1_d, erasebig, 1500)
/ correctresponse = (Response_1_d)
/ errormessage = (RedX, 1500)
/ response = free
/ validresponse = (Response_1_d, Response_2_d, Response_3_d, Response_4_d)
/ stimulustimes = [400 = frame; 500 = Response_1_d, Response_2_d, Response_3_d, Response_4_d; 0 = Positive_Image]
/ pretrialpause = 1500
/ responseinterrupt = trial
</trial>

<trial Intersecting_Regularities_Training_Trial_14> 
/ inputdevice = mouse
/ responsemessage = (Response_2_d, erasebig, 1500)
/ correctresponse = (Response_2_d)
/ errormessage = (RedX, 1500)
/ response = free
/ validresponse = (Response_1_d, Response_2_d, Response_3_d, Response_4_d)
/ stimulustimes = [400 = frame; 500 = Response_1_d, Response_2_d, Response_3_d, Response_4_d; 0 = Stimulus_2]
/ pretrialpause = 1500
/ responseinterrupt = trial
</trial>

<trial Intersecting_Regularities_Training_Trial_15> 
/ inputdevice = mouse
/ responsemessage = (Response_3_d, erasebig, 1500)
/ correctresponse = (Response_3_d)
/ errormessage = (RedX, 1500)
/ response = free
/ validresponse = (Response_1_d, Response_2_d, Response_3_d, Response_4_d)
/ stimulustimes = [400 = frame; 500 = Response_1_d, Response_2_d, Response_3_d, Response_4_d; 0 = Negative_Image]
/ pretrialpause = 1500
/ responseinterrupt = trial
</trial>

<trial Intersecting_Regularities_Training_Trial_16> 
/ inputdevice = mouse
/ responsemessage = (Response_4_d, erasebig, 1500)
/ correctresponse = (Response_4_d)
/ errormessage = (RedX, 1500)
/ response = free
/ validresponse = (Response_1_d, Response_2_d, Response_3_d, Response_4_d)
/ stimulustimes = [400 = frame; 500 = Response_1_d, Response_2_d, Response_3_d, Response_4_d; 0 = Stimulus_4]
/ pretrialpause = 1500
/ responseinterrupt = trial
</trial>



**********  block  **********

*********************************************************************
MANIPULATION CHECK
*********************************************************************

# To esnure that participants read and understand the instructions

<block Block_Interval>
/screencolor = white
/preinstructions = (interval)
</block>

<block Manipulation_Check_Instructions_1>
/ preinstructions = (Intersecting_Regularities_Instructions_1.1, Intersecting_Regularities_Instructions_1.2)
/ branch = [survey.Manipulation_Check_Instructions] 
</block>

<survey Manipulation_Check_Instructions>
/ pages = [1=test1]
/ showpagenumbers = false
/ branch = [if (dropdown.testquestion_instruction.response =="I have to click on the specific letter that goes with the image I see") block.block_interval else block.Manipulation_Check_Instructions_1] 
/ screencolor = white
</survey>

<surveypage test1>
/ questions = [1=testquestion_Instruction]
</surveypage>

<dropdown testquestion_Instruction>
/ caption = "What do you have to do in the next part of the study?"
/ options = ("I have to click randomly on the letters", "I have to click on the specific letter that goes with the image I see", "I only have to pay attention to the letters", "I don't remember")
</dropdown>


<block Begin>
/ preinstructions = (info)
/trials = [1 = pause]
</block>

<block Intersecting_Regularities_Training_block1>
/trials = [1-20 = noreplacenorepeat(Intersecting_Regularities_Training_Trial_1, Intersecting_Regularities_Training_Trial_2, Intersecting_Regularities_Training_Trial_3, Intersecting_Regularities_Training_Trial_4,
Intersecting_Regularities_Training_Trial_5, Intersecting_Regularities_Training_Trial_6, Intersecting_Regularities_Training_Trial_7, Intersecting_Regularities_Training_Trial_8,
Intersecting_Regularities_Training_Trial_9, Intersecting_Regularities_Training_Trial_10, Intersecting_Regularities_Training_Trial_11, Intersecting_Regularities_Training_Trial_12,
Intersecting_Regularities_Training_Trial_13, Intersecting_Regularities_Training_Trial_14, Intersecting_Regularities_Training_Trial_15, Intersecting_Regularities_Training_Trial_16)]
/postinstructions = (Feedback_IRT_block1)
</block>

<block Intersecting_Regularities_Training_block2>
/ preinstructions = (Intersecting_Regularities_Instructions2)
/trials = [1-20 = noreplacenorepeat(Intersecting_Regularities_Training_Trial_1, Intersecting_Regularities_Training_Trial_2, Intersecting_Regularities_Training_Trial_3, Intersecting_Regularities_Training_Trial_4,
Intersecting_Regularities_Training_Trial_5, Intersecting_Regularities_Training_Trial_6, Intersecting_Regularities_Training_Trial_7, Intersecting_Regularities_Training_Trial_8,
Intersecting_Regularities_Training_Trial_9, Intersecting_Regularities_Training_Trial_10, Intersecting_Regularities_Training_Trial_11, Intersecting_Regularities_Training_Trial_12,
Intersecting_Regularities_Training_Trial_13, Intersecting_Regularities_Training_Trial_14, Intersecting_Regularities_Training_Trial_15, Intersecting_Regularities_Training_Trial_16)]
/postinstructions = (Feedback_IRT_block2)
</block>

<block Intersecting_Regularities_Training_block3>
/ preinstructions = (Intersecting_Regularities_Instructions3)
/trials = [1-20 = noreplacenorepeat(Intersecting_Regularities_Training_Trial_1, Intersecting_Regularities_Training_Trial_2, Intersecting_Regularities_Training_Trial_3, Intersecting_Regularities_Training_Trial_4,
Intersecting_Regularities_Training_Trial_5, Intersecting_Regularities_Training_Trial_6, Intersecting_Regularities_Training_Trial_7, Intersecting_Regularities_Training_Trial_8,
Intersecting_Regularities_Training_Trial_9, Intersecting_Regularities_Training_Trial_10, Intersecting_Regularities_Training_Trial_11, Intersecting_Regularities_Training_Trial_12,
Intersecting_Regularities_Training_Trial_13, Intersecting_Regularities_Training_Trial_14, Intersecting_Regularities_Training_Trial_15, Intersecting_Regularities_Training_Trial_16)]
/postinstructions = (Feedback_IRT_block3)
</block>

<block Intersecting_Regularities_Training_block4>
/ preinstructions = (Intersecting_Regularities_Instructions4)
/trials = [1-20 = noreplacenorepeat(Intersecting_Regularities_Training_Trial_1, Intersecting_Regularities_Training_Trial_2, Intersecting_Regularities_Training_Trial_3, Intersecting_Regularities_Training_Trial_4,
Intersecting_Regularities_Training_Trial_5, Intersecting_Regularities_Training_Trial_6, Intersecting_Regularities_Training_Trial_7, Intersecting_Regularities_Training_Trial_8,
Intersecting_Regularities_Training_Trial_9, Intersecting_Regularities_Training_Trial_10, Intersecting_Regularities_Training_Trial_11, Intersecting_Regularities_Training_Trial_12,
Intersecting_Regularities_Training_Trial_13, Intersecting_Regularities_Training_Trial_14, Intersecting_Regularities_Training_Trial_15, Intersecting_Regularities_Training_Trial_16)]
/postinstructions = (Feedback_IRT_block4)
</block>

<block Intersecting_Regularities_Training_block5>
/skip = [block.intersecting_regularities_training_block4.percentcorrect > 80]
/ preinstructions = (Intersecting_Regularities_Instructions5)
/trials = [1-20 = noreplacenorepeat(Intersecting_Regularities_Training_Trial_1, Intersecting_Regularities_Training_Trial_2, Intersecting_Regularities_Training_Trial_3, Intersecting_Regularities_Training_Trial_4,
Intersecting_Regularities_Training_Trial_5, Intersecting_Regularities_Training_Trial_6, Intersecting_Regularities_Training_Trial_7, Intersecting_Regularities_Training_Trial_8,
Intersecting_Regularities_Training_Trial_9, Intersecting_Regularities_Training_Trial_10, Intersecting_Regularities_Training_Trial_11, Intersecting_Regularities_Training_Trial_12,
Intersecting_Regularities_Training_Trial_13, Intersecting_Regularities_Training_Trial_14, Intersecting_Regularities_Training_Trial_15, Intersecting_Regularities_Training_Trial_16)]
</block>


*****************************

<block end>
/ screencolor = (255, 255, 255)
/ trials = [1 = pause]
</block>

**********  Instructions  *************

<instruct>  
/ fontstyle = ("Arial", 3%)
/ windowsize = (800px, 600px)
/ inputdevice = keyboard
/ nextkey = (" ")
/ nextlabel = "Press the spacebar to continue"
/ prevlabel = "Press t to go back"
/ prevkey = ("t")
</instruct>

<page interval>
^^ Great. Let's begin.

</page>


<page info>
^^ In the next part of the study you will encounter some brand products that will soon enter the European marketplace. You have probably never encountered these products before. 

^^ We will show you some BRAND NAMES and CHINESE SYMBOLS 

^^ Please pay careful attention to these BRAND NAMES and SYMBOLS because we will ask you questions about them later on.
</page>


<page Intersecting_Regularities_Instructions_1.1>

^^ Thank you. We will now begin PART 2 of the experiment. 

^^ In Part 2 you will do a similar task as before. 

^^ However, this time some things are going to change. 

</page>

<page Intersecting_Regularities_Instructions_1.2>

^^ REMEMBER: When you see a symbol or food item you can click on one of four letters ("D", "C", "J" or "N"). 

^^ IMPORTANT: Accuracy is more important than speed. So take you time and try to be as accurate as possible. 
</page>

<page Intersecting_Regularities_instructions2>
^^ We are on phase 2 of 4. We will practice the same task as before.

^^ Try to be as accurate as possible!
</page>

<page Intersecting_Regularities_instructions3>
^^ We are on phase 3 of 4. We will practice this task again.

^^ Try to be as accurate as possible!
</page>

<page Intersecting_Regularities_instructions4>
^^ We are on phase 4 of 4. We will practice this task one last time.

^^ Try to be as accurate as possible!
</page>

<page Intersecting_Regularities_instructions5>
^^ We will give you one last chance to practice this task.

^^ Please try your best to respond with at least 90% accuracy.

^^ Take your time and try to be as accurate as possible. 
</page>


<page Feedback_IRT_block1>
^^ Your accuracy in the previous block was <% block.Intersecting_Regularities_Training_block1.percentcorrect %> %
</page> 

<page Feedback_IRT_block2>
^^ Your accuracy in the previous block was <% block.Intersecting_Regularities_Training_block2.percentcorrect %> %
</page> 

<page Feedback_IRT_block3>
^^ Your accuracy in the previous block was <% block.Intersecting_Regularities_Training_block3.percentcorrect %> %
</page> 

<page Feedback_IRT_block4>
^^ Your accuracy in the previous block was <% block.Intersecting_Regularities_Training_block4.percentcorrect %> %
</page> 



<page Relational_Training_Phase_Instructions>
^^ We will now TEST what you have just learned! 

^^ You will see an item at the top of the screen and two items at the bottom of the screen. 

^^ ***You have to click on the item at the bottom that best goes with the item at the top.*** 

^^ This is a test: the computer will NOT tell you if you are correct or incorrect.

^^ So try to be as accurate as possible. If you accuracy is lower than 80% you will have to do this task again.
</page>

<data>
/ columns = [date time subject blockcode blocknum trialcode trialnum latency correct pretrialpause posttrialpause response stimulus stimulus stimulus stimulus stimulus stimulus stimulus stimulus stimulus stimulus stimulus stimulus stimulus stimulus stimulus stimulus]
/ labels = true
/ header = true
/ format = fixed
</data>

***********************************************************************
Test Monkey
***********************************************************************
<monkey>
/ latencydistribution = normal(500, 100)
/ percentcorrect = 60
</monkey>

